{"version":3,"sources":["../src/async_data_manager.js"],"names":["define","$","Ajax","Str","Notification","asyncCall","methodname","args","promise","call","cleanupText","search","types","rowcount","donerecords","cleanupbutton","infoarea","maxrecords","done","data","text","cleanedrecords","prop","fail","ex","exception","init","loadformid","cleanupformid","searchformid","isloading","ready","get_strings","key","component","then","strings","loadbutton","first","val","click","e","preventDefault","formstatus","serializeArray","map","name","startsWith","value","filter","addClass","searchcount"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module to manage temporary table setup and cleanup\n *\n * @package    tool_textcleanup\n * @copyright  2020 - CALL Learning - Laurent David <laurent@call-learning>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/str', 'core/notification'],\n    function ($, Ajax, Str, Notification) {\n\n        var MAX_RECORDS = 50;\n\n        function asyncCall(methodname, args) {\n            var request = {\n                methodname: methodname,\n                args: args\n            };\n            var promise = Ajax.call([request])[0];\n\n            return promise;\n        }\n\n        function cleanupText(search, types, rowcount, donerecords, cleanupbutton, infoarea) {\n            asyncCall('tool_textcleanup_cleanup_text', {\n                'query': search,\n                types: types,\n                maxrecords: MAX_RECORDS\n            }).done(function (data) {\n                infoarea.text(donerecords + '/' + rowcount);\n                if (data) {\n                    if (data.cleanedrecords === 0) {\n                        cleanupbutton.prop(\"disabled\", false);\n                        infoarea.text('');\n                    } else {\n                        cleanupText(search, types, rowcount, donerecords + data.cleanedrecords, cleanupbutton, infoarea);\n                    }\n                }\n            }).fail(function (ex) {\n                cleanupbutton.prop(\"disabled\", false);\n                Notification.exception(ex);\n            });\n        }\n\n        return {\n            init: function (loadformid, cleanupformid, searchformid, isloading) {\n                $('document').ready(function () {\n                    Str.get_strings([\n                        {key: 'dataloading', component: 'tool_textcleanup'},\n                        {key: 'reloaddata', component: 'tool_textcleanup'},\n                    ]).then(function (strings) {\n\n                        // Load / Reload data.\n                        var loadbutton = $('#' + loadformid + \" [type=submit]\").first();\n                        if (isloading) {\n                            loadbutton.val(strings[0]);\n                        } else {\n                            loadbutton.val(strings[1]);\n                        }\n                        loadbutton.click(function (e) {\n                            e.preventDefault();\n                            loadbutton.val(strings[0]);\n                            loadbutton.prop(\"disabled\", true);\n\n                            asyncCall('tool_textcleanup_build_text_table', []).done(function () {\n                                loadbutton.val(strings[1]);\n                                loadbutton.prop(\"disabled\", false);\n                            }).fail(function (ex) {\n                                loadbutton.prop(\"disabled\", false);\n                                loadbutton.val(strings[0]);\n                                Notification.exception(ex);\n                            });\n                        });\n                        var formstatus = $('#'+searchformid).serializeArray();\n                        var search = $('#'+searchformid +' #id_search').val();\n                        var types = formstatus.map(function (e) {\n                                return (e.name.startsWith(\"types[\") && e.value != \"\") ? e.value : null;\n                            }\n                        ).filter(function (e) {\n                            return e !== null;\n                        });\n\n                        // Cleanup text button.\n                        var cleanupbutton = $('#' + cleanupformid + \" [type=submit]\").first();\n                        cleanupbutton.addClass('btn-danger');\n\n                        cleanupbutton.click(function (e) {\n                            e.preventDefault();\n                            cleanupbutton.prop(\"disabled\", true);\n                            var infoarea = $('#infoarea');\n                                asyncCall('tool_textcleanup_get_count_search', {\n                                    'query': search,\n                                    types: types,\n                                }).done(function (data) {\n                                    if (data.searchcount) {\n                                        cleanupText(search, types, data.searchcount, 0, cleanupbutton, infoarea);\n                                    } else {\n                                        cleanupbutton.prop(\"disabled\", false);\n                                    }\n                                }).fail(function (ex) {\n                                    cleanupbutton.prop(\"disabled\", false);\n                                    Notification.exception(ex);\n                                });\n                        });\n\n                    }).fail(Notification.exception);\n                });\n            }\n        };\n    });\n"],"file":"async_data_manager.min.js"}